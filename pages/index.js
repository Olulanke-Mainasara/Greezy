import DayForecast from "@/components/DayForecast";
import Main from "@/components/Main/Main";
import Nav from "@/components/Nav";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import { useQuery } from "react-query";
import { useLocalStorage } from "react-use";
import { useQueryClient } from "react-query";

export default function Home() {
  const [supported, setSupported] = useState(true);
  const [location, setLocation] = useState(null);
  const [confirmed, setConfirmed] = useLocalStorage("confirmed");
  const [askUser, setAskUser] = useState(true);
  const queryClient = useQueryClient();
  const weatherInfo = queryClient.getQueryData("weatherInfo");

  const handleLocationClick = () => {
    setConfirmed("true");
  };

  useEffect(() => {
    if (!navigator.geolocation) {
      setSupported(false);
    }

    if (confirmed === "true") {
      if (!weatherInfo) {
        navigator.geolocation.getCurrentPosition(
          (position) => {
            setLocation(position.coords);
          },
          (error) => {
            setSupported(false);
          }
        );
      }

      setAskUser(false);
    }
  }, [confirmed, weatherInfo]);

  async function fetchData(location) {
    const rawData = await fetch(
      `https://api.open-meteo.com/v1/forecast?latitude=${location.latitude}&longitude=${location.longitude}&hourly=temperature_2m,relativehumidity_2m,apparent_temperature,weathercode,pressure_msl,visibility,windspeed_80m,winddirection_80m&models=best_match&daily=weathercode,temperature_2m_max,temperature_2m_min,sunrise,sunset&current_weather=true&windspeed_unit=ms&timezone=auto`
    );
    const jsonData = rawData.json();
    return jsonData;
  }

  const { isLoading, isError } = useQuery(
    "weatherInfo",
    () => fetchData(location),
    {
      enabled: !!location,
      staleTime: 600000,
    }
  );

  if (!supported) {
    return (
      <div className="absolute top-0 left-0 z-20 flex flex-col gap-6 items-center justify-center w-full h-full text-white backdrop-brightness-[25%]">
        <h1 className="text-2xl text-center md:text-4xl">
          Geolocation is not supported
        </h1>
        <p className="text-center w-[95%] max-w-sm">
          Please check your settings and allow location access for this website
          or check your internet connectivity and make sure you are connected.
          If after confirming all these, it still doesn&apos;t work, then
          geolocation is not supported by the browser you are currently using
        </p>
        <button
          className="px-8 py-2 text-black duration-300 bg-white rounded-lg hover:bg-black hover:text-white"
          onClick={() => window.location.reload()}
        >
          Reload
        </button>
      </div>
    );
  }

  if (isLoading) {
    return (
      <div className="absolute top-0 left-0 z-20 flex items-center justify-center w-full h-full text-white backdrop-brightness-[25%]">
        <h1 className="text-2xl text-center md:text-3xl">
          Getting weather information...
        </h1>
      </div>
    );
  }

  if (isError) {
    return (
      <div className="absolute top-0 left-0 z-20 flex flex-col gap-6 items-center justify-center w-full h-full text-white backdrop-brightness-[25%]">
        <h1 className="text-2xl text-center md:text-3xl">An error occurred</h1>
        <p className="text-center w-[95%] max-w-sm">
          A server error occurred, try reloading the browser and if the error
          persists, please contact my developers for more info and a possible
          resolution of the error
        </p>
        <button
          className="px-8 py-2 text-black duration-300 bg-white rounded-lg hover:bg-black hover:text-white"
          onClick={() => window.location.reload()}
        >
          Reload
        </button>
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Greezy</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-[#262626]">
        <div className="flex flex-col w-full min-h-[100dvh] xl:h-screen gap-12 p-4 xl:flex-row xl:gap-8">
          <Nav />
          <Main />
          <DayForecast />
        </div>
      </main>

      {askUser && (
        <div className="absolute top-0 left-0 z-20 flex flex-col gap-6 items-center justify-center w-full h-full text-white backdrop-brightness-[10%]">
          <h1 className="w-[90%] text-2xl text-center md:text-4xl">
            We need your location ðŸ‘‰ðŸ‘ˆ
          </h1>
          <p className="text-center w-[95%] max-w-sm">
            In order to display accurate weather information for you, our
            website would need to access your location
          </p>
          <div className="flex gap-6">
            <Link
              className="px-8 py-2 text-black duration-300 bg-white border rounded-lg hover:bg-black hover:text-white"
              href={"/cities"}
            >
              Deny
            </Link>
            <button
              className="px-8 py-2 text-black duration-300 bg-white border rounded-lg hover:bg-black hover:text-white"
              onClick={handleLocationClick}
            >
              Allow
            </button>
          </div>
        </div>
      )}
    </>
  );
}
